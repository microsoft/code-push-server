name: Build and Deploy 

on: 
  workflow_dispatch:
    inputs:
      branch:
        type: string
        description: 'Enter branch or commit to checkout'
      environment:
        type: environment
        required: true
        description: 'environment to run'
        default: nonprod 
        

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: ${{github.event.inputs.environment}}
    permissions:
      contents: write 
    defaults:
      run:
        working-directory: ./api
    steps:
    - name: 'Checkout GitHub Actions'
      uses: actions/checkout@v3
    - name: Setup Node 
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    - name: Build    
      run: | 
        npm install
        npm run build 
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: release.zip    


  manage_infrastructure:
    name: manage_infrastructure
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: "code-push-server-${{ github.event.inputs.environment }}"
      TF_IN_AUTOMATION: true
      name:  ${{github.event.inputs.environment}}
    defaults:
      run:
        working-directory: ./terraform  
    permissions:
      contents: read 
    steps: 
    - name: Code checkout    
      uses: actions/checkout@v3
    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}   
    - name: Setup Terraform  
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}    
    - name: Initialise Terraform
      run: terraform init 
    - name: Apply Terraform
      run: terraform apply -var environment=${{ github.event.inputs.environment }} -input=false -auto-approve 
    - name: Azure logout   
      run: az logout
      shell: bash
      if: always()  
     

  Deploy:
    runs-on: ubuntu-latest
    needs: [ build, manage_infrastructure]
    environment:  ${{github.event.inputs.environment}}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
      - name: Unzip artifact for deployment
        run: unzip release.zip      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'codepush-server-app-${{ github.event.inputs.environment }}'
          package: .
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}



      
 

  
    

  
                
          
     
    
             
 

    
