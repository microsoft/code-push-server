openapi: 3.0.0
info:
  title: CodePush API
  version: 0.0.1
  description: CodePush OpenAPI specification
servers:
  - url: http://localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the service.
      responses:
        "200":
          description: Service is healthy
          content:
            text/plain:
              schema:
                type: string
                example: Healthy
        "500":
          description: Internal server error
  /updateCheck:
    get:
      summary: Update check endpoint
      description: Checks for updates for the specified deployment key and app version.
      parameters:
        - name: deploymentKey
          in: query
          required: true
          schema:
            type: string
          description: The deployment key for the app.
        - name: clientUniqueId
          in: query
          required: true
          schema:
            type: string
          description: The unique client Identifier.
        - name: appVersion
          in: query
          required: true
          schema:
            type: string
          description: The version of the app.
        - name: packageHash
          in: query
          required: false
          schema:
            type: string
          description: The hash of the package.
        - name: isCompanion
          in: query
          required: false
          schema:
            type: boolean
          description: Indicates if the request is from a companion app.
        - name: label
          in: query
          required: false
          schema:
            type: string
          description: The label of the package.
      responses:
        "200":
          description: Update information
          content:
            application/json:
              schema:
                type: object
                properties:
                  updateInfo:
                    type: object
                    properties:
                      appVersion:
                        type: string
                      description:
                        type: string
                      isDisabled:
                        type: boolean
                      isMandatory:
                        type: boolean
                      label:
                        type: string
                      packageHash:
                        type: string
                      rollout:
                        type: number
                      target_binary_range:
                        type: string
                      downloadURL:
                        type: string
                      isAvailable:
                        type: boolean
                      packageSize:
                        type: number
                      shouldRunBinaryVersion:
                        type: boolean
                      updateAppVersion:
                        type: boolean
        "400":
          description: Invalid request parameters
        "500":
          description: Internal server error
  /v0.1/public/codepush/update_check:
    get:
      summary: Update check endpoint
      description: Checks for updates for the specified deployment key and app version.
      parameters:
        - name: deploymentKey
          in: query
          required: true
          schema:
            type: string
          description: The deployment key for the app.
        - name: clientUniqueId
          in: query
          required: true
          schema:
            type: string
          description: The unique client Identifier.
        - name: appVersion
          in: query
          required: true
          schema:
            type: string
          description: The version of the app.
        - name: packageHash
          in: query
          required: false
          schema:
            type: string
          description: The hash of the package.
        - name: isCompanion
          in: query
          required: false
          schema:
            type: boolean
          description: Indicates if the request is from a companion app.
        - name: label
          in: query
          required: false
          schema:
            type: string
          description: The label of the package.
      responses:
        "200":
          description: Update information
          content:
            application/json:
              schema:
                type: object
                properties:
                  updateInfo:
                    type: object
                    properties:
                      appVersion:
                        type: string
                      description:
                        type: string
                      isDisabled:
                        type: boolean
                      isMandatory:
                        type: boolean
                      label:
                        type: string
                      packageHash:
                        type: string
                      rollout:
                        type: number
                      target_binary_range:
                        type: string
                      downloadURL:
                        type: string
                      isAvailable:
                        type: boolean
                      packageSize:
                        type: number
                      shouldRunBinaryVersion:
                        type: boolean
                      updateAppVersion:
                        type: boolean
        "400":
          description: Invalid request parameters
        "500":
          description: Internal server error
  /reportStatus/deploy:
    post:
      summary: Report deployment status
      description: Reports the status of a deployment for the specified deployment key
        and app version.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deploymentKey:
                  type: string
                  description: The deployment key for the app.
                appVersion:
                  type: string
                  description: The version of the app.
                previousDeploymentKey:
                  type: string
                  description: The previous deployment key.
                previousLabelOrAppVersion:
                  type: string
                  description: The previous label or app version.
                clientUniqueId:
                  type: string
                  description: The unique client identifier.
                label:
                  type: string
                  description: The label of the package.
                status:
                  type: string
                  description: The status of the deployment.
      responses:
        "200":
          description: Deployment status reported successfully
        "400":
          description: Invalid request parameters
        "500":
          description: Internal server error
  /v0.1/public/codepush/report_status/deploy:
    post:
      summary: Report deployment status
      description: Reports the status of a deployment for the specified deployment key
        and app version.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deploymentKey:
                  type: string
                  description: The deployment key for the app.
                appVersion:
                  type: string
                  description: The version of the app.
                previousDeploymentKey:
                  type: string
                  description: The previous deployment key.
                previousLabelOrAppVersion:
                  type: string
                  description: The previous label or app version.
                clientUniqueId:
                  type: string
                  description: The unique client identifier.
                label:
                  type: string
                  description: The label of the package.
                status:
                  type: string
                  description: The status of the deployment.
      responses:
        "200":
          description: Deployment status reported successfully
        "400":
          description: Invalid request parameters
        "500":
          description: Internal server error
  /reportStatus/download:
    post:
      summary: Report download status
      description: Reports the download status for the specified deployment key and
        package label.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deploymentKey:
                  type: string
                  description: The deployment key for the app.
                label:
                  type: string
                  description: The label of the package.
      responses:
        "200":
          description: Download status reported successfully
        "400":
          description: Invalid request parameters
        "500":
          description: Internal server error
  /v0.1/public/codepush/report_status/download:
    post:
      summary: Report download status
      description: Reports the download status for the specified deployment key and
        package label.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deploymentKey:
                  type: string
                  description: The deployment key for the app.
                label:
                  type: string
                  description: The label of the package.
      responses:
        "200":
          description: Download status reported successfully
        "400":
          description: Invalid request parameters
        "500":
          description: Internal server error
  /account:
    get:
      summary: Retrieve account information
      description: Retrieves the account information for the authenticated user.
      responses:
        "200":
          description: Account information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    type: object
                    properties:
                      email:
                        type: string
                      name:
                        type: string
                      linkedProviders:
                        type: array
                        items:
                          type: string
        "401":
          description: Unauthorized access
        "500":
          description: Internal server error
  /accessKeys:
    get:
      summary: Retrieve access keys
      description: Retrieves the access keys for the authenticated user.
      responses:
        "200":
          description: Access keys retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessKeys:
                    type: array
                    items:
                      type: object
                      properties:
                        createdBy:
                          type: string
                        createdTime:
                          type: integer
                          format: int64
                        expires:
                          type: integer
                          format: int64
                        description:
                          type: string
                        friendlyName:
                          type: string
                        id:
                          type: string
                        isSession:
                          type: boolean
                        name:
                          type: string
        "401":
          description: Unauthorized access
        "500":
          description: Internal server error
    post:
      summary: Create a new access key
      description: Creates a new access key for the authenticated user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                friendlyName:
                  type: string
                description:
                  type: string
                createdBy:
                  type: string
                ttl:
                  type: integer
                  format: int64
      responses:
        "201":
          description: Access keys retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessKeys:
                    type: array
                    items:
                      type: object
                      properties:
                        createdBy:
                          type: string
                        description:
                          type: string
                        friendlyName:
                          type: string
                        name:
                          type: string
                        createdTime:
                          type: integer
                          format: int64
                        expires:
                          type: integer
                          format: int64
                        isSession:
                          type: boolean
        "400":
          description: Bad request
        "401":
          description: Unauthorized access
        "409":
          description: Conflict - Access key already exists
        "500":
          description: Internal server error
  "/accessKeys/{accessKeyName}":
    get:
      summary: Retrieve a specific access key
      description: Retrieves the details of a specific access key for the
        authenticated user.
      parameters:
        - in: path
          name: accessKeyName
          required: true
          schema:
            type: string
          description: The name of the access key to retrieve
      responses:
        "200":
          description: Access key retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessKey:
                    type: object
                    properties:
                      createdBy:
                        type: string
                      createdTime:
                        type: integer
                        format: int64
                      expires:
                        type: integer
                        format: int64
                      description:
                        type: string
                      friendlyName:
                        type: string
                      id:
                        type: string
                      isSession:
                        type: boolean
        "401":
          description: Unauthorized access
        "404":
          description: Access key not found
        "500":
          description: Internal server error
    delete:
      summary: Delete a specific access key
      description: Deletes a specific access key for the authenticated user.
      parameters:
        - in: path
          name: accessKeyName
          required: true
          schema:
            type: string
          description: The name of the access key to delete
      responses:
        "204":
          description: Access key deleted successfully
        "401":
          description: Unauthorized access
        "404":
          description: Access key not found
        "500":
          description: Internal server error
  "/sessions/{createdBy}":
    delete:
      summary: Delete sessions created by a specific user
      description: Deletes all sessions created by a specific user for the
        authenticated account.
      parameters:
        - in: path
          name: createdBy
          required: true
          schema:
            type: string
          description: The identifier of the user who created the sessions
      responses:
        "204":
          description: Sessions deleted successfully
        "401":
          description: Unauthorized access
        "404":
          description: Sessions not found
        "500":
          description: Internal server error
  /apps:
    get:
      summary: Retrieve all apps
      description: Retrieves all apps for the authenticated user.
      responses:
        "200":
          description: Apps retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  apps:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        collaborators:
                          type: object
                          additionalProperties:
                            type: object
                            properties:
                              isCurrentAccount:
                                type: boolean
                              permission:
                                type: string
                        deployments:
                          type: array
                          items:
                            type: string
        "401":
          description: Unauthorized access
        "500":
          description: Internal server error
    post:
      summary: Create a new app
      description: Creates a new app for the authenticated user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                collaborators:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      isCurrentAccount:
                        type: boolean
                      permission:
                        type: string
                manuallyProvisionDeployments:
                  type: boolean
      responses:
        "201":
          description: App created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: object
                    properties:
                      name:
                        type: string
                      collaborators:
                        type: object
                        additionalProperties:
                          type: object
                          properties:
                            isCurrentAccount:
                              type: boolean
                            permission:
                              type: string
                      deployments:
                        type: array
                        items:
                          type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized access
        "409":
          description: Conflict - App already exists
        "500":
          description: Internal server error
  "/apps/{appName}":
    get:
      summary: Retrieve a specific app
      description: Retrieves the details of a specific app for the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app to retrieve
      responses:
        "200":
          description: App retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: object
                    properties:
                      name:
                        type: string
                      collaborators:
                        type: object
                        additionalProperties:
                          type: object
                          properties:
                            isCurrentAccount:
                              type: boolean
                            permission:
                              type: string
                      deployments:
                        type: array
                        items:
                          type: string
        "401":
          description: Unauthorized access
        "404":
          description: App not found
        "500":
          description: Internal server error
    delete:
      summary: Delete a specific app
      description: Deletes a specific app for the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app to delete
      responses:
        "204":
          description: App deleted successfully
        "401":
          description: Unauthorized access
        "404":
          description: App not found
        "500":
          description: Internal server error
    patch:
      summary: Update a specific app
      description: Updates the details of a specific app for the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        "200":
          description: App updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  app:
                    type: object
                    properties:
                      name:
                        type: string
                      collaborators:
                        type: object
                        additionalProperties:
                          type: object
                          properties:
                            isCurrentAccount:
                              type: boolean
                            permission:
                              type: string
                      deployments:
                        type: array
                        items:
                          type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized access
        "404":
          description: App not found
        "409":
          description: Conflict - App name already exists
        "500":
          description: Internal server error
  "/apps/{appName}/transfer/{email}":
    post:
      summary: Transfer app ownership
      description: Transfers the ownership of a specific app to another user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app to transfer
        - in: path
          name: email
          required: true
          schema:
            type: string
          description: The email of the user to transfer the app to
      responses:
        "201":
          description: App ownership transferred successfully
        "400":
          description: Invalid email parameter
        "401":
          description: Unauthorized access
        "404":
          description: App not found
        "500":
          description: Internal server error
  "/apps/{appName}/collaborators/{email}":
    post:
      summary: Add a collaborator to an app
      description: Adds a collaborator to a specific app for the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app to add the collaborator to
        - in: path
          name: email
          required: true
          schema:
            type: string
          description: The email of the collaborator to add
      responses:
        "201":
          description: Collaborator added successfully
        "400":
          description: Invalid email parameter
        "401":
          description: Unauthorized access
        "404":
          description: App not found
        "500":
          description: Internal server error
    delete:
      summary: Remove a collaborator from an app
      description: Removes a collaborator from a specific app for the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app to remove the collaborator from
        - in: path
          name: email
          required: true
          schema:
            type: string
          description: The email of the collaborator to remove
      responses:
        "204":
          description: Collaborator removed successfully
        "400":
          description: Invalid email parameter
        "401":
          description: Unauthorized access
        "404":
          description: App or collaborator not found
        "500":
          description: Internal server error
  "/apps/{appName}/collaborators":
    get:
      summary: Retrieve collaborators of a specific app
      description: Retrieves the list of collaborators for a specific app for the
        authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app to retrieve collaborators for
      responses:
        "200":
          description: Collaborators retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  collaborators:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        isCurrentAccount:
                          type: boolean
                        permission:
                          type: string
        "401":
          description: Unauthorized access
        "404":
          description: App not found
        "500":
          description: Internal server error
  "/apps/{appName}/deployments/{deploymentName}":
    get:
      summary: Retrieve a specific deployment of an app
      description: Retrieves the details of a specific deployment for a specific app
        for the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app to retrieve the deployment for
        - in: path
          name: deploymentName
          required: true
          schema:
            type: string
          description: The name of the deployment to retrieve
      responses:
        "200":
          description: Deployment retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  key:
                    type: string
                  id:
                    type: string
                  package:
                    type: object
                    properties:
                      description:
                        type: string
                      isDisabled:
                        type: boolean
                      isMandatory:
                        type: boolean
                      rollout:
                        type: integer
                      appVersion:
                        type: string
                      packageHash:
                        type: string
                      blobUrl:
                        type: string
                      size:
                        type: integer
                      manifestBlobUrl:
                        type: string
                      releaseMethod:
                        type: string
                      uploadTime:
                        type: integer
                      label:
                        type: string
                      releasedBy:
                        type: string
                      diffPackageMap:
                        type: object
                        additionalProperties:
                          type: string
                  deployment:
                    type: object
                    properties:
                      name:
                        type: string
                      key:
                        type: string
                      package:
                        type: object
                        properties:
                          description:
                            type: string
                          isDisabled:
                            type: boolean
                          isMandatory:
                            type: boolean
                          rollout:
                            type: integer
                          appVersion:
                            type: string
                          packageHash:
                            type: string
                          blobUrl:
                            type: string
                          size:
                            type: integer
                          releaseMethod:
                            type: string
                          uploadTime:
                            type: integer
                          label:
                            type: string
                          releasedBy:
                            type: string
                          diffPackageMap:
                            type: object
                            additionalProperties:
                              type: string
        "401":
          description: Unauthorized access
        "404":
          description: Deployment not found
        "500":
          description: Internal server error
    delete:
      summary: Delete a specific deployment of an app
      description: Deletes a specific deployment for a specific app for the
        authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app to delete the deployment from
        - in: path
          name: deploymentName
          required: true
          schema:
            type: string
          description: The name of the deployment to delete
      responses:
        "204":
          description: Deployment deleted successfully
        "401":
          description: Unauthorized access
        "404":
          description: Deployment not found
        "500":
          description: Internal server error
    patch:
      summary: Update a specific deployment of an app
      description: Updates the details of a specific deployment for a specific app for
        the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app to update the deployment for
        - in: path
          name: deploymentName
          required: true
          schema:
            type: string
          description: The name of the deployment to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The new name of the deployment
                key:
                  type: string
                  description: The new key of the deployment
      responses:
        "200":
          description: Deployment updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  deployment:
                    type: object
                    properties:
                      name:
                        type: string
                      key:
                        type: string
                      package:
                        type: object
                        properties:
                          description:
                            type: string
                          isDisabled:
                            type: boolean
                          isMandatory:
                            type: boolean
                          rollout:
                            type: integer
                          appVersion:
                            type: string
                          packageHash:
                            type: string
                          blobUrl:
                            type: string
                          size:
                            type: integer
                          releaseMethod:
                            type: string
                          uploadTime:
                            type: integer
                          label:
                            type: string
                          releasedBy:
                            type: string
                          diffPackageMap:
                            type: object
                            additionalProperties:
                              type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized access
        "404":
          description: Deployment not found
        "500":
          description: Internal server error
  "/apps/{appName}/deployments":
    post:
      summary: Create a new deployment for an app
      description: Creates a new deployment for a specific app for the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app to create the deployment for
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the deployment
                key:
                  type: string
                  description: The key of the deployment
      responses:
        "201":
          description: Deployment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  deployment:
                    type: object
                    properties:
                      key:
                        type: string
                      name:
                        type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized access
        "409":
          description: Conflict - Deployment already exists
        "500":
          description: Internal server error
  "/apps/{appName}/deployments/{deploymentName}/release":
    post:
      summary: Release a new deployment package
      description: Releases a new deployment package for a specific deployment of a
        specific app for the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app
        - in: path
          name: deploymentName
          required: true
          schema:
            type: string
          description: The name of the deployment
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                package:
                  type: string
                  format: binary
                  description: The deployment package file
                packageInfo:
                  type: string
                  description: JSON string containing package information
      responses:
        "201":
          description: Deployment package released successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  package:
                    type: object
                    properties:
                      description:
                        type: string
                      isDisabled:
                        type: boolean
                      isMandatory:
                        type: boolean
                      rollout:
                        type: integer
                      appVersion:
                        type: string
                      packageHash:
                        type: string
                      blobUrl:
                        type: string
                      size:
                        type: integer
                      releaseMethod:
                        type: string
                      uploadTime:
                        type: integer
                        format: int64
                      label:
                        type: string
                      releasedBy:
                        type: string
                      diffPackageMap:
                        type: object
                        additionalProperties:
                          type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized access
        "409":
          description: Conflict - Identical package already exists
        "500":
          description: Internal server error
  "/apps/{appName}/deployments/{deploymentName}/history":
    delete:
      summary: Delete deployment history
      description: Deletes the history of a specific deployment for a specific app for
        the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app
        - in: path
          name: deploymentName
          required: true
          schema:
            type: string
          description: The name of the deployment
      responses:
        "204":
          description: Deployment history deleted successfully
        "401":
          description: Unauthorized access
        "404":
          description: Deployment not found
        "500":
          description: Internal server error
    get:
      summary: Retrieve deployment history
      description: Retrieves the history of a specific deployment for a specific app
        for the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app
        - in: path
          name: deploymentName
          required: true
          schema:
            type: string
          description: The name of the deployment
      responses:
        "200":
          description: Deployment history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        description:
                          type: string
                        isDisabled:
                          type: boolean
                        isMandatory:
                          type: boolean
                        rollout:
                          type: integer
                          nullable: true
                        appVersion:
                          type: string
                        packageHash:
                          type: string
                        blobUrl:
                          type: string
                        size:
                          type: integer
                        manifestBlobUrl:
                          type: string
                        releaseMethod:
                          type: string
                        uploadTime:
                          type: integer
                          format: int64
                        label:
                          type: string
                        releasedBy:
                          type: string
                        diffPackageMap:
                          type: object
                          nullable: true
        "401":
          description: Unauthorized access
        "404":
          description: Deployment not found
        "500":
          description: Internal server error
  "/apps/{appName}/deployments/{deploymentName}/metrics":
    get:
      summary: Retrieve deployment metrics
      description: Retrieves the metrics for a specific deployment of an app for the
        authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app
        - in: path
          name: deploymentName
          required: true
          schema:
            type: string
          description: The name of the deployment
      responses:
        "200":
          description: Metrics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  metrics:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        active:
                          type: integer
                        downloaded:
                          type: integer
                        failed:
                          type: integer
                        installed:
                          type: integer
        "401":
          description: Unauthorized access
        "404":
          description: Deployment not found
        "500":
          description: Internal server error
  "/apps/{appName}/deployments/{sourceDeploymentName}/promote/{destDeploymentName}":
    post:
      summary: Promote a package from one deployment to another
      description: Promotes a package from the source deployment to the destination
        deployment for the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app
        - in: path
          name: sourceDeploymentName
          required: true
          schema:
            type: string
          description: The name of the source deployment
        - in: path
          name: destDeploymentName
          required: true
          schema:
            type: string
          description: The name of the destination deployment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                packageInfo:
                  type: object
                  properties:
                    appVersion:
                      type: string
                    blobUrl:
                      type: string
                    description:
                      type: string
                    isDisabled:
                      type: boolean
                    isMandatory:
                      type: boolean
                    packageHash:
                      type: string
                    rollout:
                      type: integer
                    size:
                      type: integer
                    uploadTime:
                      type: integer
                      format: int64
                    releaseMethod:
                      type: string
                    originalLabel:
                      type: string
                    originalDeployment:
                      type: string
      responses:
        "201":
          description: Package promoted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  package:
                    type: object
                    properties:
                      appVersion:
                        type: string
                      blobUrl:
                        type: string
                      description:
                        type: string
                      isDisabled:
                        type: boolean
                      isMandatory:
                        type: boolean
                      packageHash:
                        type: string
                      rollout:
                        type: integer
                      size:
                        type: integer
                      uploadTime:
                        type: integer
                        format: int64
                      releaseMethod:
                        type: string
                      originalLabel:
                        type: string
                      originalDeployment:
                        type: string
        "400":
          description: Bad request
        "401":
          description: Unauthorized access
        "404":
          description: Deployment not found
        "409":
          description: Conflict - Cannot promote to an unfinished rollout release unless
            it is already disabled
        "500":
          description: Internal server error
  "/apps/{appName}/deployments/{deploymentName}/rollback/{targetRelease}":
    post:
      summary: Rollback a deployment to a previous release
      description: Rolls back a specific deployment of an app to a previous release
        for the authenticated user.
      parameters:
        - in: path
          name: appName
          required: true
          schema:
            type: string
          description: The name of the app
        - in: path
          name: deploymentName
          required: true
          schema:
            type: string
          description: The name of the deployment
        - in: path
          name: targetRelease
          required: true
          schema:
            type: string
          description: The label of the target release to rollback to
      responses:
        "200":
          description: Rollback performed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  package:
                    type: object
                    properties:
                      appVersion:
                        type: string
                      blobUrl:
                        type: string
                      description:
                        type: string
                      isDisabled:
                        type: boolean
                      isMandatory:
                        type: boolean
                      packageHash:
                        type: string
                      size:
                        type: integer
                      uploadTime:
                        type: integer
                        format: int64
                      releaseMethod:
                        type: string
                      originalLabel:
                        type: string
                      rollout:
                        type: integer
        "400":
          description: Bad request
        "401":
          description: Unauthorized access
        "404":
          description: Deployment or target release not found
        "409":
          description: Conflict - Cannot rollback to a different app version or the target
            release is already the latest release
        "500":
          description: Internal server error
  /app/authenticated:
    get:
      summary: Check if the user is authenticated
      description: Returns a boolean indicating if the user is authenticated.
      responses:
        "200":
          description: User is authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                    example: true
        "401":
          description: Unauthorized access
        "429":
          description: Too many requests
        "500":
          description: Internal server error
  /app/auth/logout:
    get:
      summary: Logout the user
      description: Logs out the user by invalidating the access key and clearing the
        session.
      parameters:
        - in: query
          name: accessKeyId
          required: false
          schema:
            type: string
          description: The access key ID to be invalidated
      responses:
        "200":
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    example: success
        "401":
          description: Unauthorized access
        "500":
          description: Internal server error
  /app/auth/login/github:
    get:
      summary: Initiate login with HitHub
      description: Initiates the login process with GitHub provider.
      responses:
        "200":
          description: Login initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                    description: The URL to redirect the user to for authentication
                  statusCode:
                    type: integer
                    description: The HTTP status code
                  action:
                    type: string
                    description: The action being performed ("login")
        "401":
          description: Unauthorized access
        "429":
          description: Too many requests
        "500":
          description: Internal server error
  /app/auth/register/github:
    get:
      summary: Initiate register with the GitHub
      description: Initiates the register process with GitHub provider.
      responses:
        "200":
          description: Redgister initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                    description: The URL to redirect the user to for authentication
                  statusCode:
                    type: integer
                    description: The HTTP status code
                  action:
                    type: string
                    description: The action being performed
        "401":
          description: Unauthorized access
        "429":
          description: Too many requests
        "500":
          description: Internal server error
  /app/auth/callback/github:
    get:
      summary: Handle OAuth callback
      description: Issue app token for the authenticated user.
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
          description: The authorization code received from the OAuth provider
        - in: query
          name: state
          required: true
          schema:
            type: string
          description: The state parameter to prevent CSRF attacks
      responses:
        "200":
          description: Callback handled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessKey:
                    type: string
                    description: The access key for the authenticated user
        "401":
          description: Unauthorized access
        "403":
          description: Forbidden access
        "429":
          description: Too many requests
        "500":
          description: Internal server error
tags: []
